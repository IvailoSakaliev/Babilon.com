@model StudentSystem2016.VModels.Models.User.LoginVM
@{ 
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <environment include="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/css/site.css" />
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css"
              asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" />
        <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
        @Scripts.Render("~/Scripts/site.js")
        <link href="~/Content/Style.css" rel="stylesheet" />

    </environment>
    <title>Index</title>
    <script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '2369841669923362');
  fbq('track', 'PageView');
    </script>
    <noscript>
        <img height="1" width="1" style="display:none"
             src="https://www.facebook.com/tr?id=2369841669923362&ev=PageView&noscript=1" />
    </noscript>
</head>
<body>

    <div class="container login">

        <a href="../../Home/Index"><img src="~/images/Vavilonci.png" width="100%" alt="Home" /></a>
        <h3>Login</h3>


        <form method="post" asp-controller="Login" asp-action="Index">
            <div style="color:red" >
                @Html.ValidationSummary(false, "", new { @class="text-danger"})
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                <span><a href="Registration">Create new account</a>/ <a href="ForgotPassword">Forgot Password</a></span>
            </div>
            <div class="form-group">
                @Html.CheckBoxFor(model => model.RememberME, new { htmlAttributes = new { @class = "form-control" } })<b>  Remember Me</b>
                
            </div>

            <input type="submit" class="btn btn-primary loginButton" value="Login" />

        </form>

    </div>

</body>
</html>