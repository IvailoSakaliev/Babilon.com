@model IEnumerable<DataAcsess.Models.Student>

@{
    ViewBag.Title = "Studnets";
}

<h2>Studnets</h2>

@Html.Partial("_AddLinkPartialView")
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Course)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Groups)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OKS)
        </th>
        
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Course)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Groups)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OKS)
        </td>
        
        <td>
            @if (HttpContext.Current.Session["LoggedUser"] != null)
                {
                    string sessionUser = HttpContext.Current.Session["LoggedUser"].ToString();
                    if (sessionUser == "1")
                    {
                    <span>@Html.ActionLink("Edit", "Edit", new { id = item.ID }) |</span>
                        <span>@Html.ActionLink("Details", "Details", new { id = item.ID }) |</span>
                        <span>@Html.ActionLink("Delete", "Delete", new { id = item.ID })</span>
                }
                else if (sessionUser == "2" || sessionUser == "3")
                {
                    <span>@Html.ActionLink("Details", "Details", new { id = item.ID }) |</span>
                }
            }
        </td>
    </tr>
}

</table>
